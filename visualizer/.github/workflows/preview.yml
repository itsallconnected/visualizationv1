# Placeholder YAML file

name: Pull Request Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

# These permissions are needed for enhanced security setup
permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  security_checks:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --production
        continue-on-error: true
      
      - name: Scan for secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Run dependency review
        uses: actions/dependency-review-action@v3
      
  validate_code:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        id: linting
        run: npm run lint

      - name: Run unit tests
        id: unit-tests
        run: npm run test:unit

      - name: Run integration tests
        id: integration-tests
        run: npm run test:integration
        
      - name: Post test results to PR
        uses: actions/github-script@v6
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const unitTestResult = "${{ steps.unit-tests.outcome }}" === "success" ? "✅ Passed" : "❌ Failed";
            const integrationTestResult = "${{ steps.integration-tests.outcome }}" === "success" ? "✅ Passed" : "❌ Failed";
            const lintingResult = "${{ steps.linting.outcome }}" === "success" ? "✅ Passed" : "❌ Failed";
            
            const testResultsSummary = `
            ### Test Results
            - Unit Tests: ${unitTestResult}
            - Integration Tests: ${integrationTestResult}
            - Linting: ${lintingResult}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: testResultsSummary
            });
            
  build_preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: [security_checks, validate_code]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate unique preview id
        id: preview-id
        run: echo "preview_id=pr-${{ github.event.pull_request.number }}-$(date +%s)" >> $GITHUB_OUTPUT
        
      - name: Create preview config
        run: |
          # Create a sanitized preview configuration
          cp amplify.yml amplify.preview.yml
          # Substitute environment-specific values
          sed -i 's/PRODUCTION_API_ENDPOINT/PREVIEW_API_ENDPOINT/g' amplify.preview.yml

      - name: Build for preview
        run: npm run build:preview
        env:
          REACT_APP_PREVIEW_ID: ${{ steps.preview-id.outputs.preview_id }}
          REACT_APP_API_ENDPOINT: ${{ secrets.PREVIEW_API_ENDPOINT }}
          REACT_APP_PREVIEW_MODE: 'true'
        
      - name: Prepare artifacts
        run: |
          # Create an info file with PR metadata
          echo "PR #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}" > build/pr-info.txt
          echo "Built from commit: ${{ github.sha }}" >> build/pr-info.txt
          echo "Preview ID: ${{ steps.preview-id.outputs.preview_id }}" >> build/pr-info.txt
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: preview-build
          path: build/
          
  deploy_preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: build_preview
    environment: preview
    steps:
      - name: Download preview build
        uses: actions/download-artifact@v3
        with:
          name: preview-build
          path: build
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_PREVIEW_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Get preview ID
        id: preview-id
        run: |
          PREVIEW_ID=$(grep "Preview ID:" build/pr-info.txt | cut -d ":" -f2 | xargs)
          echo "preview_id=$PREVIEW_ID" >> $GITHUB_OUTPUT
          
      - name: Deploy to preview environment
        id: deploy
        run: |
          # Deploy to isolated preview bucket
          aws s3 sync build/ s3://${{ secrets.PREVIEW_BUCKET }}/${{ steps.preview-id.outputs.preview_id }}/
          
          # Generate the preview URL
          PREVIEW_URL="https://${{ secrets.PREVIEW_DOMAIN }}/${{ steps.preview-id.outputs.preview_id }}/index.html"
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          
      - name: Security check for preview
        run: |
          # Ensure preview is properly isolated
          aws s3api put-bucket-policy --bucket ${{ secrets.PREVIEW_BUCKET }} \
          --policy "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":\"*\",\"Action\":\"s3:GetObject\",\"Resource\":\"arn:aws:s3:::${{ secrets.PREVIEW_BUCKET }}/${{ steps.preview-id.outputs.preview_id }}/*\",\"Condition\":{\"IpAddress\":{\"aws:SourceIp\":[\"${{ secrets.ALLOWED_IP_RANGES }}\"]}}},{\"Effect\":\"Deny\",\"Principal\":\"*\",\"Action\":\"s3:*\",\"Resource\":\"arn:aws:s3:::${{ secrets.PREVIEW_BUCKET }}/${{ steps.preview-id.outputs.preview_id }}/data/*\"}]}"
          
      - name: Comment on PR with preview link
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              ## 🚀 Preview Deployment
              
              Your changes can be previewed at: [Preview Link](${{ steps.deploy.outputs.preview_url }})
              
              Note: This preview is only accessible to authorized developers and expires in 7 days.
              `
            });
            
  cleanup_preview:
    name: Schedule Preview Cleanup
    runs-on: ubuntu-latest
    needs: deploy_preview
    steps:
      - name: Setup cleanup job
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Schedule cleanup job to run in 7 days
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'cleanup-previews.yml',
              ref: 'main',
              inputs: {
                preview_id: '${{ steps.preview-id.outputs.preview_id }}',
                pr_number: '${{ github.event.pull_request.number }}'
              }
            });
